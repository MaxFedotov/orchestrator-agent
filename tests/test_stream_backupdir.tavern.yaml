# test_stream.tavern.yaml

---

test_name: Seed process using xtrabackup\mysqldump\mydumper
stages:
  - name: Run /api/mysql-info on sourceHost
    request:
      url: http://{sourceHost}:3002/api/mysql-info
      method: GET
      params:
        token: "{sourceToken}"
    response:
      status_code: 200
      body:
        MySQLVersion: !anystr
        MySQLDatadirPath: !anystr
        MySQLBackupdirPath: !anystr
        HasActiveConnections: !anybool
  - name: Run /api/mysql-databases on sourceHost
    request:
      url: http://{sourceHost}:3002/api/mysql-databases
      method: GET
      params:
        token: "{sourceToken}"
    response:
      status_code: 200
      body:
        MySQLDatabases: !anything
        InnoDBLogSize: !anyint
  - name: Run /api/mysql-status on sourceHost
    request:
      url: http://{sourceHost}:3002/api/mysql-status
      method: GET
      params:
        token: "{sourceToken}"
    response:
      status_code: 200
  - name: Run /api/mysql-port on sourceHost
    request:
      url: http://{sourceHost}:3002/api/mysql-port
      method: GET
      params:
        token: "{sourceToken}"
    response:
      status_code: 200
      body:
        $ext:
          function: testfunc:save_port
      save:
        $ext:
          function: testfunc:save_port
  - name: Run /api/mysql-du on sourceHost
    request:
      url: http://{sourceHost}:3002/api/mysql-du
      method: GET
      params:
        token: "{sourceToken}"
    response:
      status_code: 200
      body:
        $ext:
          function: testfunc:validate_response
  - name: Run /api/mysql-datadir-available-space on sourceHost
    request:
      url: http://{sourceHost}:3002/api/mysql-datadir-available-space
      method: GET
      params:
        token: "{sourceToken}"
    response:
      status_code: 200
      body:
        $ext:
          function: testfunc:validate_response
  - name: Run /api/mysql-backupdir-available-space on sourceHost
    request:
      url: http://{sourceHost}:3002/api/mysql-backupdir-available-space
      method: GET
      params:
        token: "{sourceToken}"
    response:
      status_code: 200
      body:
        $ext:
          function: testfunc:validate_response
  - name: Run /api/mysql-error-log-tail on sourceHost
    request:
      url: http://{sourceHost}:3002/api/mysql-error-log-tail
      method: GET
      params:
        token: "{sourceToken}"
    response:
      status_code: 200
      body:
        $ext:
          function: testfunc:validate_response
  - name: Run /api/mysql-info on targetHost
    request:
      url: http://{targetHost}:3002/api/mysql-info
      method: GET
      params:
        token: "{targetToken}"
    response:
      status_code: 200
      body:
        MySQLVersion: !anystr
        MySQLDatadirPath: !anystr
        MySQLBackupdirPath: !anystr
        HasActiveConnections: !anybool
  - name: Run /api/mysql-databases on targetHost
    request:
      url: http://{targetHost}:3002/api/mysql-databases
      method: GET
      params:
        token: "{targetToken}"
    response:
      status_code: 200
      body:
        MySQLDatabases: !anything
        InnoDBLogSize: !anyint
  - name: Run /api/mysql-status on targetHost
    request:
      url: http://{targetHost}:3002/api/mysql-status
      method: GET
      params:
        token: "{targetToken}"
    response:
      status_code: 200
  - name: Run /api/mysql-port on targetHost
    request:
      url: http://{targetHost}:3002/api/mysql-port
      method: GET
      params:
        token: "{targetToken}"
    response:
      status_code: 200
      body:
        $ext:
          function: testfunc:save_port
  - name: Run /api/mysql-du on targetHost
    request:
      url: http://{targetHost}:3002/api/mysql-du
      method: GET
      params:
        token: "{targetToken}"
    response:
      status_code: 200
      body:
        $ext:
          function: testfunc:validate_response
  - name: Run /api/mysql-datadir-available-space on targetHost
    request:
      url: http://{targetHost}:3002/api/mysql-datadir-available-space
      method: GET
      params:
        token: "{targetToken}"
    response:
      status_code: 200
      body:
        $ext:
          function: testfunc:validate_response
  - name: Run /api/mysql-backupdir-available-space on targetHost
    request:
      url: http://{targetHost}:3002/api/mysql-backupdir-available-space
      method: GET
      params:
        token: "{targetToken}"
    response:
      status_code: 200
      body:
        $ext:
          function: testfunc:validate_response
  - name: Run /api/mysql-error-log-tail on targetHost
    request:
      url: http://{targetHost}:3002/api/mysql-error-log-tail
      method: GET
      params:
        token: "{targetToken}"
    response:
      status_code: 200
      body:
        $ext:
          function: testfunc:validate_response
  - name: Create backup folder on targetHost. Run /api/create-backup-folder on targetHost
    request:
      url: http://{targetHost}:3002/api/create-backup-folder/1
      method: GET
      params:
        token: "{targetToken}"
    response:
      status_code: 200
      body:
        $ext:
          function: testfunc:save_backupFolder
      save:
        $ext:
          function: testfunc:save_backupFolder  
  - name: Start receiving on targetHost. Run /api/receive-backup on targetHost
    request:
      url: http://{targetHost}:3002/api/receive-backup/1/{seedMethod}/{backupFolder}
      method: GET
      params:
        token: "{targetToken}"
    response:
      status_code: 200
    delay_after: 3  
  - name: Start streaming backup on sourceHost. Run /api/start-backup on sourceHost
    request:
      url: http://{sourceHost}:3002/api/start-backup/1/xtrabackup-stream/{backupFolder}/{targetHost}/{databases}
      method: GET
      params:
        token: "{sourceToken}"
    response:
      status_code: 200
    delay_after: 5
  - name: Get backup metadata. Run /api/backup-metadata  on targetHost
    request:
      url: http://{targetHost}:3002/api/backup-metadata/1/{seedMethod}/{backupFolder}
      method: GET
      params:
        token: "{targetToken}"
    response:
      status_code: 200
      body:
        BinlogCoordinates: !anything
        GTIDPurged: !anystr  
  - name: Start restoring on targetHost. Run /api/start-restore on targetHost
    request:
      url: http://{targetHost}:3002/api/start-restore/1/{seedMethod}/{backupFolder}/{databases}
      method: GET
      params:
        token: "{targetToken}"
    response:
      status_code: 200
  - name: Start cleanup on sourceHost. Run /api/cleanup-mysql-backupdir on sourceHost
    request:
      url: http://{sourceHost}:3002/api/cleanup-mysql-backupdir/1
      method: GET
      params:
        token: "{sourceToken}"
    response:
      status_code: 200
  - name: Start cleanup on target. Run /api/cleanup-mysql-backupdir on target
    request:
      url: http://{targetHost}:3002/api/cleanup-mysql-backupdir/1
      method: GET
      params:
        token: "{targetToken}"
    response:
      status_code: 200



        




